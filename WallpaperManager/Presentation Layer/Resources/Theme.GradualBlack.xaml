<!-- 
  THIS FILE IS PROVIDED UNDER THE TERMS OF THE CREATIVE COMMONS PUBLIC LICENSE WHICH CAN BE FOUND IN THE PROVIDED License.txt 
  FILE. IT IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER ITS 
  LICENSE OR COPYRIGHT LAW IS PROHIBITED.
  
  Written by David-Kay Posmyk (KayPosmyk@gmx.de)
-->
  
<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Common.Presentation.Controls="clr-namespace:Common.Presentation.Controls;assembly=Common.Presentation"
>
  <!-- Brushes -->
  <DrawingBrush x:Key="Theme.LargeWindowBackgroundBrush" TileMode="None">
    <DrawingBrush.Drawing>
      <DrawingGroup>
        <GeometryDrawing>
          <GeometryDrawing.Geometry>
            <RectangleGeometry Rect="0,0,640,480" />
          </GeometryDrawing.Geometry>
          <GeometryDrawing.Brush>
            <LinearGradientBrush StartPoint="0.5,-0.17" EndPoint="0.5,1.17">
              <LinearGradientBrush.GradientStops>
                <!--<GradientStop Color="#000000" Offset="0" />
                <GradientStop Color="#222222" Offset="0.26" />
                <GradientStop Color="#000000" Offset="1" />-->
                <GradientStop Color="#35205C8E" Offset="0" />
                <GradientStop Color="#35205C8E" Offset="0.10" />
                <GradientStop Color="#111111" Offset="0.19" />
                <GradientStop Color="#222222" Offset="0.25" />
                <GradientStop Color="#000000" Offset="1" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </GeometryDrawing.Brush>
        </GeometryDrawing>

        <GeometryDrawing Geometry="F1 M 0,480L 382.176,480C 291.198,382.262 153.771,320 0,320L 0,480 Z">
          <GeometryDrawing.Brush>
            <SolidColorBrush Color="#0CCCCCCC" />
          </GeometryDrawing.Brush>
        </GeometryDrawing>

        <GeometryDrawing Geometry="F1 M 640,480L 640,224C 500.801,271.154 386.631,363.133 320,480L 640,480 Z">
          <GeometryDrawing.Brush>
            <SolidColorBrush Color="#15CCCCCC" />
          </GeometryDrawing.Brush>
        </GeometryDrawing>

        <GeometryDrawing Geometry="F1 M 640,480L 640,116.927C 369.473,132.504 138.848,276.421 26.3426,480L 640,480 Z">
          <GeometryDrawing.Brush>
            <SolidColorBrush Color="#08FFFFFF" />
          </GeometryDrawing.Brush>
        </GeometryDrawing>
      </DrawingGroup>
    </DrawingBrush.Drawing>
  </DrawingBrush>

  <LinearGradientBrush x:Key="Theme.PanelBackgroundBrush" StartPoint="0.5,3.5" EndPoint="0.5,-2.5">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#2D002C4E" Offset="0" />
      <GradientStop Color="#2C00256F" Offset="0.533898" />
      <GradientStop Color="#2C000E2E" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Theme.Panel2BackgroundBrush" Color="#23070707" />
  <SolidColorBrush x:Key="Theme.Panel3BackgroundBrush" Color="#53070707" />

  <SolidColorBrush x:Key="Theme.PanelBorderBrush" Color="#D04273A0" />
  <SolidColorBrush x:Key="Theme.Panel2BorderBrush" Color="#FF4273A0" />
  <SolidColorBrush x:Key="Theme.Panel3BorderBrush" Color="#FF5293C0" />
  
  <SolidColorBrush x:Key="Theme.ForegroundBrush" Color="#DDDDDD" />
  <SolidColorBrush x:Key="Theme.ForegroundDisabledBrush" Color="#888888" />

  <LinearGradientBrush x:Key="Theme.Menu2BackgroundBrush" StartPoint="0.0,0.0" EndPoint="0.0,1.0">
    <GradientStop Color="#EE002444" Offset="1" />
    <GradientStop Color="#EE0D3D74" Offset="0" />
  </LinearGradientBrush>
  
  <SolidColorBrush x:Key="Theme.MenuBackgroundBrush" Color="#EE032954" />
  
  <!-- Window -->
  <Style x:Key="Theme.GradualBlack" TargetType="{x:Type Window}">
    <Setter Property="Background" Value="{StaticResource Theme.LargeWindowBackgroundBrush}" />
    
    <Style.Resources>
      <!-- CheckBox -->
      <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
              <BulletDecorator Background="Transparent">
                <BulletDecorator.Bullet>
                  <Border 
                    Name="brdBorder"  
                    Width="12" 
                    Height="12" 
                    CornerRadius="0" 
                    BorderThickness="1"
                    BorderBrush="{StaticResource Theme.Panel2BorderBrush}"
                  >
                    <Path 
                      Name="pthCheckMark"
                      Width="7" Height="7" 
                      SnapsToDevicePixels="False" 
                      Stroke="{StaticResource Theme.ForegroundBrush}"
                      StrokeThickness="2"
                      Data="M 0 0 L 7 7 M 0 7 L 7 0" 
                    />
                  </Border>
                </BulletDecorator.Bullet>
                <ContentPresenter 
                  Margin="4,0,0,0"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Left"
                  RecognizesAccessKey="True"
                />
              </BulletDecorator>
              
              <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="False">
                  <Setter TargetName="pthCheckMark" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                  <Setter TargetName="pthCheckMark" Property="Data">
                    <Setter.Value>
                      <RectangleGeometry Rect="0,0,7,7" />
                    </Setter.Value>
                  </Setter>
                  <Setter 
                    TargetName="pthCheckMark" 
                    Property="Fill" 
                    Value="{StaticResource Theme.ForegroundBrush}" 
                  />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter 
                    TargetName="brdBorder" 
                    Property="BorderBrush" 
                    Value="{StaticResource Theme.Panel3BorderBrush}" 
                  />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter 
                    TargetName="pthCheckMark" 
                    Property="Stroke" 
                    Value="{StaticResource Theme.ForegroundDisabledBrush}" 
                  />
                  <Setter 
                    TargetName="brdBorder" 
                    Property="BorderBrush" 
                    Value="Transparent" 
                  />
                  <Setter Property="Foreground" Value="{StaticResource Theme.ForegroundDisabledBrush}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <!-- ListBox -->
      <Style x:Key="Theme.ListBoxBase" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="{StaticResource Theme.PanelBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource Theme.PanelBackgroundBrush}" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBox}">
              <Border 
                x:Name="brdRoot" 
                SnapsToDevicePixels="True" 
                Padding="4"
                CornerRadius="4"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
              >
                <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                  <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ScrollViewer>
              </Border>
              
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter 
                    Property="Background" 
                    TargetName="brdRoot" 
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                  />
                </Trigger>
                <Trigger Property="IsGrouping" Value="True">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    
      <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource Theme.ListBoxBase}" />
      <Style TargetType="{x:Type Common.Presentation.Controls:ListBoxEx}" BasedOn="{StaticResource Theme.ListBoxBase}" />
    
      <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Foreground" Value="{StaticResource Theme.ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
      </Style>
    
      <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{StaticResource Theme.ForegroundBrush}" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
              <Grid>
                <Rectangle Fill="{TemplateBinding Background}" />
                <Border 
                  Name="brdSelected" 
                  Opacity="0" 
                  Background="#B3070707"
                  CornerRadius="2"
                />
                <Border 
                  Name="brdHovered" 
                  Opacity="0" 
                  BorderBrush="#000000" 
                  BorderThickness="1" 
                  CornerRadius="2"
                >
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#CDE8FF" Offset="0" />
                      <GradientStop Color="#004778" Offset="1" />
                      <GradientStop Color="#0059A3" Offset="0.14" />
                    </LinearGradientBrush>
                  </Border.Background>
                </Border>
                <ContentPresenter Name="cprContent" />
              </Grid>
    
              <ControlTemplate.Triggers>
    
                <Trigger Property="IsSelected" Value="True">
                  <Setter TargetName="brdSelected" Property="Opacity" Value="0.3" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="brdHovered" Property="Opacity" Value="0.1" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <!-- Menus -->
      <Style TargetType="{x:Type Menu}">
        <Setter Property="Margin" Value="4,2,2,4" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource Theme.ForegroundBrush}" />
      </Style>
      
      <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource Theme.ForegroundBrush}" />
        <Setter Property="HasDropShadow" Value="True" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ContextMenu}">
              <Border 
                Name="Border" 
                Background="{StaticResource Theme.MenuBackgroundBrush}"
                BorderBrush="{StaticResource Theme.Panel2BorderBrush}" 
                SnapsToDevicePixels="True" 
                BorderThickness="1"
              >
                
                <StackPanel Margin="1" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    
      <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="BackgroundBorder" Background="Transparent" BorderThickness="1">
          <Grid>
            <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
            <Popup 
              Name="Popup" 
              Placement="Bottom" 
              IsOpen="{TemplateBinding IsSubmenuOpen}" 
              AllowsTransparency="True" 
              Focusable="False" 
              PopupAnimation="Fade"
            >
              <Border 
                Name="SubmenuBorder" 
                SnapsToDevicePixels="True" 
                Background="{StaticResource Theme.MenuBackgroundBrush}"
                BorderBrush="{StaticResource Theme.PanelBorderBrush}" 
                BorderThickness="1"
              > 
                <StackPanel Margin="1" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
              </Border>
            </Popup>
          </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
          <Trigger Property="IsSuspendingPopupAnimation" Value="True">
            <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
          </Trigger>
          <Trigger Property="IsHighlighted" Value="True">
            <Setter 
              TargetName="BackgroundBorder" 
              Property="Background" 
              Value="{StaticResource Theme.Panel2BackgroundBrush}" 
            />
            <Setter 
              TargetName="BackgroundBorder" 
              Property="BorderBrush" 
              Value="{StaticResource Theme.PanelBorderBrush}" 
            />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="Gray" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
      
      <ControlTemplate 
        x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
        TargetType="{x:Type MenuItem}"
      >
        <Border x:Name="BackgroundBorder" Background="Transparent" BorderThickness="1">
          <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
        </Border>
        
        <ControlTemplate.Triggers>
          <Trigger Property="IsHighlighted" Value="True">
            <Setter 
              TargetName="BackgroundBorder" 
              Property="Background" 
              Value="{StaticResource Theme.Panel3BackgroundBrush}" 
            />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="Gray" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    
      <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border 
          x:Name="BackgroundBorder" 
          Background="Transparent" 
          BorderThickness="1" 
          CornerRadius="1"
        >
          <StackPanel Orientation="Horizontal">
            <ContentPresenter 
              Name="Icon" 
              Margin="6,0,6,0" 
              VerticalAlignment="Center" 
              ContentSource="Icon" 
              MinWidth="16"
            />
            <ContentPresenter Margin="4,2,6,2" ContentSource="Header" RecognizesAccessKey="True" />
          </StackPanel>
        </Border>
    
        <ControlTemplate.Triggers>
          <Trigger Property="Icon" Value="{x:Null}">
            <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
          </Trigger>
          <Trigger Property="IsHighlighted" Value="True">
            <Setter 
              TargetName="BackgroundBorder" 
              Property="Background" 
              Value="{StaticResource Theme.Panel3BackgroundBrush}" 
            />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="Gray" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
      
      <ControlTemplate 
        x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
        TargetType="{x:Type MenuItem}"
      >
        <Border x:Name="BackgroundBorder" Background="Transparent" BorderThickness="1">
          <Grid>
            <StackPanel Orientation="Horizontal">
              <ContentPresenter 
                Name="Icon" 
                Margin="6,0,6,0" 
                VerticalAlignment="Center" 
                ContentSource="Icon" 
                MinWidth="16"
              />
              <ContentPresenter Margin="4,2,6,2" ContentSource="Header" RecognizesAccessKey="True" />
            </StackPanel>
            
            <Popup 
              Name="Popup" 
              Placement="Right" 
              HorizontalOffset="-4" 
              IsOpen="{TemplateBinding IsSubmenuOpen}" 
              AllowsTransparency="True" 
              Focusable="False" 
              PopupAnimation="Fade"
            >
              <Border 
                Name="SubmenuBorder" 
                SnapsToDevicePixels="True" 
                Background="{StaticResource Theme.MenuBackgroundBrush}"
                BorderBrush="{StaticResource Theme.PanelBorderBrush}" 
                BorderThickness="1"
              >
                <StackPanel Margin="1" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
              </Border>
            </Popup>
          </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
          <Trigger Property="Icon" Value="{x:Null}">
            <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
          </Trigger>
          <Trigger Property="IsHighlighted" Value="True">
            <Setter 
              TargetName="BackgroundBorder" 
              Property="Background" 
              Value="{StaticResource Theme.Panel3BackgroundBrush}" 
            />
          </Trigger>
          <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
            <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="Gray" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    
      <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="4" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Separator}">
              <Border BorderBrush="{StaticResource Theme.Panel2BorderBrush}" BorderThickness="1" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        
        <Style.Triggers>
          <Trigger Property="Role" Value="TopLevelHeader">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
          </Trigger>
          <Trigger Property="Role" Value="TopLevelItem">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
          </Trigger>
          <Trigger Property="Role" Value="SubmenuHeader">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
          </Trigger>
          <Trigger Property="Role" Value="SubmenuItem">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      
      <!-- ToolBar -->
      <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Background" Value="Transparent" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToolBar}">
              <Grid x:Name="Grid" SnapsToDevicePixels="True" Margin="3,1,1,1">
                <Border 
                  x:Name="MainPanelBorder"
                  Background="{TemplateBinding Background}" 
                  BorderBrush="{TemplateBinding BorderBrush}" 
                  BorderThickness="{TemplateBinding BorderThickness}" 
                  CornerRadius="4" 
                  Padding="{TemplateBinding Padding}"
                >
                  <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                    <Thumb 
                      x:Name="ToolBarThumb"  
                      Width="0" 
                      Visibility="Collapsed"
                    />
                    <ContentPresenter 
                      x:Name="ToolBarHeader" 
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                      HorizontalAlignment="Center" 
                      VerticalAlignment="Center" 
                      ContentSource="Header" 
                    />
                    <ToolBarPanel 
                      x:Name="PART_ToolBarPanel" 
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                      Margin="3,1,3,2" 
                      IsItemsHost="True" 
                    />
                  </DockPanel>
                </Border>
              </Grid>
              
              <ControlTemplate.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                  <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
                  <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
                  <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
                  <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
                  <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                  <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter 
                    Property="Foreground" 
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" 
                  />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border 
                x:Name="BackgroundBorder" 
                Background="Transparent" 
                BorderThickness="1" 
                CornerRadius="1"
              >
                <ContentPresenter Margin="4" VerticalAlignment="Center" />
              </Border>
    
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter 
                    TargetName="BackgroundBorder" 
                    Property="Background" 
                    Value="{StaticResource Theme.Panel2BackgroundBrush}" 
                  />
                  <Setter 
                    TargetName="BackgroundBorder" 
                    Property="BorderBrush" 
                    Value="{StaticResource Theme.PanelBorderBrush}" 
                  />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        
        <Style.Resources>
          <Style TargetType="{x:Type Image}">
            <Style.Triggers>
              <DataTrigger 
                Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                Value="False"
              >
                <Setter Property="Opacity" Value="0.4" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Style.Resources>
      </Style>
    
      <!-- ScrollBars -->
      <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
              <Border Background="Transparent" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    
      <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
              <Border 
                CornerRadius="2" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="1" 
              />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    
      <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
          <Track Name="PART_Track" IsDirectionReversed="true">
            <Track.DecreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb 
                Style="{StaticResource ScrollBarThumb}" 
                Margin="1,0,1,0" 
                Background="{StaticResource Theme.Panel3BackgroundBrush}" 
              />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
            </Track.IncreaseRepeatButton>
          </Track>
        </Grid>
      </ControlTemplate>
    
      <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
          <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
            <Track.DecreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
              <Thumb 
                Style="{StaticResource ScrollBarThumb}" 
                Margin="0,1,0,1" 
                Background="{StaticResource Theme.Panel3BackgroundBrush}" 
              />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
              <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
            </Track.IncreaseRepeatButton>
          </Track>
        </Grid>
      </ControlTemplate>
    
      <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        
        <Style.Triggers>
          <Trigger Property="Orientation" Value="Horizontal">
            <Setter Property="Margin" Value="0,2,0,0" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="12" />
            <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
          </Trigger>
          
          <Trigger Property="Orientation" Value="Vertical">
            <Setter Property="Margin" Value="2,0,0,0" />
            <Setter Property="Width" Value="12" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
          </Trigger>
        </Style.Triggers>
      </Style>
      
      <!-- Scroll Viewer -->
      <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollViewer}">
    		      <Grid Background="{TemplateBinding Background}">
    			      <Grid.ColumnDefinitions>
    				      <ColumnDefinition Width="*" />
    				      <ColumnDefinition Width="Auto" />
    			      </Grid.ColumnDefinitions>
    			      <Grid.RowDefinitions>
    				      <RowDefinition Height="*" />
    				      <RowDefinition Height="Auto" />
    			      </Grid.RowDefinitions>
                
                <ScrollContentPresenter 
                  Name="PART_ScrollContentPresenter" 
                  Margin="{TemplateBinding Padding}" 
                  Content="{TemplateBinding Content}" 
                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                  CanContentScroll="{TemplateBinding CanContentScroll}" 
                  CanHorizontallyScroll="False" 
                  CanVerticallyScroll="False"
                  Grid.Column="0" 
                  Grid.Row="0" 
                />
    			      <ScrollBar 
                  Name="PART_VerticalScrollBar" 
                  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                  Cursor="Arrow" 
                  ViewportSize="{TemplateBinding ViewportHeight}" 
                  Maximum="{TemplateBinding ScrollableHeight}" 
                  Minimum="0" 
                  Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                  AutomationProperties.AutomationId="VerticalScrollBar"
                  Grid.Column="1" 
                  Grid.Row="0" 
                />
    			      <ScrollBar 
                  Name="PART_HorizontalScrollBar" 
                  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                  Cursor="Arrow" 
                  Orientation="Horizontal" 
                  ViewportSize="{TemplateBinding ViewportWidth}" 
                  Maximum="{TemplateBinding ScrollableWidth}" 
                  Minimum="0" 
                  Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                  AutomationProperties.AutomationId="HorizontalScrollBar"
                  Grid.Column="0" 
                  Grid.Row="1" 
                />
    		      </Grid>
    	      </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </Style.Resources>
  </Style>
  
  <!-- ToolBar (ConfigOptionsBar) -->
  <Style x:Key="Theme.ConfigOptionsBar" TargetType="{x:Type ToolBar}">
    <Setter Property="Foreground" Value="White" />
    <Setter Property="Padding" Value="10,0,10,0" />
    <Setter Property="BorderBrush" Value="#FFC5C5C5" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="BitmapEffect">
      <Setter.Value>
        <DropShadowBitmapEffect Direction="280" ShadowDepth="3" Softness="0.60" Opacity="0.65" Color="#FFADADAD" />
      </Setter.Value>
    </Setter>

    <Setter Property="Background">
      <Setter.Value>
        <!--<LinearGradientBrush EndPoint="0.5,1.0" StartPoint="0.5,0.0">
          <GradientStop Color="#FF1951B4" Offset="0" />
          <GradientStop Color="#FF1C4375" Offset="1.0" />
          <GradientStop Color="#FF184799" Offset="0.25" />
        </LinearGradientBrush>-->
        <LinearGradientBrush EndPoint="0.57,0.9" StartPoint="0.57,0.15">
          <GradientStop Color="#FF213289" Offset="0" />
          <GradientStop Color="#FF1F3A8B" Offset="0.125" />
          <GradientStop Color="#FF395197" Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid x:Name="Grid" SnapsToDevicePixels="True" Margin="1">
            <Border 
              x:Name="MainPanelBorder"
              Background="{TemplateBinding Background}" 
              BorderBrush="{TemplateBinding BorderBrush}" 
              BorderThickness="{TemplateBinding BorderThickness}" 
              Padding="{TemplateBinding Padding}"
            >
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb 
                  x:Name="ToolBarThumb"  
                  Width="0" 
                  Visibility="Collapsed"
                />
                <ContentPresenter 
                  x:Name="ToolBarHeader" 
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center" 
                  ContentSource="Header" 
                />
                <ToolBarPanel 
                  x:Name="PART_ToolBarPanel" 
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                  Margin="0" 
                  IsItemsHost="True" 
                />
              </DockPanel>
            </Border>
          </Grid>
          
          <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
              <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
              <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
              <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter 
                Property="Foreground" 
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" 
              />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    
    <Style.Resources>
      <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="MinHeight" Value="40" />
    
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RadioButton}">
              <Border x:Name="BackgroundBorder" Background="Transparent" BorderThickness="0">
                <ContentPresenter Margin="6" VerticalAlignment="Center" />
              </Border>
    
              <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="BackgroundBorder" Property="Background">
                    <Setter.Value>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#75A3C0C6" Offset="0.0" />
                        <GradientStop Color="#9BDEF4FF" Offset="1.0" />
                      </LinearGradientBrush>
                    </Setter.Value>
                  </Setter>
    
                  <Setter Property="Foreground" Value="Black" />
                </Trigger>
                
                <Trigger Property="IsChecked" Value="True">
                  <Setter TargetName="BackgroundBorder" Property="Background">
                    <Setter.Value>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#B5A3C0C6" Offset="0.0" />
                        <GradientStop Color="#DDDEF4FF" Offset="1.0" />
                      </LinearGradientBrush>
                    </Setter.Value>
                  </Setter>
                  
                  <Setter Property="Foreground" Value="Black" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        
        <Style.Resources>
          <Style TargetType="{x:Type Label}">
            <Setter Property="Padding" Value="0,2,0,0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="HorizontalAlignment" Value="Center" />
          </Style>
          
          <Style TargetType="{x:Type Image}">
            <Setter Property="HorizontalAlignment" Value="Center" />
          </Style>
        </Style.Resources>
      </Style>
    </Style.Resources>
  </Style>
</ResourceDictionary>